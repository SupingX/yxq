// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Gradle 是android现在主流的编译工具. 类似的编译工具有Ant 和 FaceBook的Buck

// Project 和 Task

// 每一个项目的编译至少有一个Project,一个build.gradle就代表一个project,每一个project里面包含了多个task,task里面包含很多action,action包含了需要被执行的代码

// 初始化阶段：创建 Project 对象，如果有多个build.gradle，也会创建多个project.
// 配置阶段：在这个阶段，会执行所有的编译脚本，同时还会创建project的所有的task，为后一个阶段做准备。
// 执行阶段：在这个阶段，gradle 会根据传入的参数决定如何执行这些task,真正action的执行代码就在这里.



// 顶层的 build.gradle 文件的配置会应用到所有的项目中

buildscript { // 定义了 Android 编译工具的类路径

    repositories { // 代码仓库
        jcenter() // repositories中,jCenter是一个著名的 Maven 仓库。

        // 远程仓库
        // 有一些项目，可能是一些公司私有的仓库中的，这时候我们需要手动加入仓库连接：
        // maven {
        //      url "http ://xxx.com"
        //       credentials {
        //          username 'user'
        //          password 'password'
        //       }
        // }

        // 本地仓库
        // 文件的引用 需要在项目下建立文件夹arrs
        // 我们可以通过配置项目中存在的静态文件夹作为本地仓库：
        // flatDir {
        //      dirs 'arrs'
        // }
        //

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects { //allprojects:中定义的属性会被应用到所有 Moudle 中，但是为了保证每个项目的独立性，我们一般不会在这里面操作太多共有的东西。
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
